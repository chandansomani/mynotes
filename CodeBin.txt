private void checkDuplicatesButton_Click(object sender, EventArgs e)
{
    try
    {
        if (this.MainDataSource is null || this.MainDataSource.Rows.Count == 0)
        {
            MessageBox.Show("No data loaded to check for duplicates.", "Duplicate Check", MessageBoxButtons.OK, MessageBoxIcon.Information);
            return;
        }

        var seenRows = new ConcurrentDictionary<string, bool>(); // Thread-safe collection
        var duplicates = new ConcurrentBag<int>(); // Thread-safe bag for duplicates
        var totalRows = this.MainDataSource.Rows.Count;

        Parallel.For(0, totalRows, i =>
        {
            var row = this.MainDataSource.Rows[i];
            var hashKey = GetRowHashKey(row);

            if (!seenRows.TryAdd(hashKey, true))
            {
                duplicates.Add(i);
            }

            // Optionally, report progress (e.g., via a progress bar)
            if (i % 1000 == 0)
            {
                this.Invoke(new Action(() =>
                {
                    this.toolStripStatusSearch.Text = $"Checking row {i + 1} of {totalRows}...";
                }));
            }
        });

        if (duplicates.Count > 0)
        {
            MessageBox.Show($"Duplicates found in {duplicates.Count} rows.", "Duplicate Check", MessageBoxButtons.OK, MessageBoxIcon.Warning);

            // Highlight duplicates in the DataGridView
            foreach (int index in duplicates)
            {
                this.mainGridView.Rows[index].DefaultCellStyle.BackColor = Color.LightCoral;
            }
        }
        else
        {
            MessageBox.Show("No duplicates found.", "Duplicate Check", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        this.toolStripStatusSearch.Text = "Duplicate check completed.";
    }
    catch (Exception ex)
    {
        MessageBox.Show($"An error occurred while checking for duplicates: {ex.Message}", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
        this.toolStripStatusSearch.Text = "Error occurred during duplicate check.";
    }
}
