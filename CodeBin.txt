private void checkDuplicatesButton_Click(object sender, EventArgs e)
{
    try
    {
        if (this.MainDataSource is null || this.MainDataSource.Rows.Count == 0)
        {
            MessageBox.Show("No data loaded to check for duplicates.", "Duplicate Check", MessageBoxButtons.OK, MessageBoxIcon.Information);
            return;
        }

        // Use a HashSet to track unique rows
        var seenRows = new HashSet<string>();
        var duplicates = new List<int>(); // Store row indices of duplicates

        int totalRows = this.MainDataSource.Rows.Count;

        for (int i = 0; i < totalRows; i++)
        {
            DataRow row = this.MainDataSource.Rows[i];
            string rowValue = string.Join("|", row.ItemArray.Select(item => item.ToString()));

            // Update toolStripStatusSearch with current index
            this.toolStripStatusSearch.Text = $"Checking row {i + 1} of {totalRows}...";

            if (!seenRows.Add(rowValue))
            {
                // Duplicate found, track its index
                duplicates.Add(i);
            }

            // Process UI updates
            Application.DoEvents(); // Allows UI to update during the loop
        }

        if (duplicates.Count > 0)
        {
            MessageBox.Show($"Duplicates found in {duplicates.Count} rows.", "Duplicate Check", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            
            // Optionally, highlight duplicates in the DataGridView
            foreach (int index in duplicates)
            {
                this.mainGridView.Rows[index].DefaultCellStyle.BackColor = Color.LightCoral;
            }
        }
        else
        {
            MessageBox.Show("No duplicates found.", "Duplicate Check", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        // Reset toolStripStatusSearch
        this.toolStripStatusSearch.Text = "Duplicate check completed.";
    }
    catch (Exception ex)
    {
        MessageBox.Show($"An error occurred while checking for duplicates: {ex.Message}", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
        this.toolStripStatusSearch.Text = "Error occurred during duplicate check.";
    }
}
